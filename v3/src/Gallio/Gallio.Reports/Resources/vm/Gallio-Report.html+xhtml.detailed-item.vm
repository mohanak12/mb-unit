#*
	====================================================
	 LOCAL VARIABLES
	====================================================
*#
#set ($nestingLevel = $nestingLevel + 1)
#set ($current = $run)
#set ($kind = $current.Step.Metadata.GetValue("TestKind"))
#set ($path = $current.Step.CodeLocation.Path)
#set ($line = $current.Step.CodeLocation.Line)
#set ($column = $current.Step.CodeLocation.Column)
#set ($statistics = $helper.GetStatistics($current))
#*
	====================================================
	 HEADER
	====================================================
*#
<li id="testStepRun-$current.Step.Id">
  <span class="testStepRunHeading testStepRunHeading-Level$nestingLevel">
    <img src="$resourceRoot/img/Minus.gif" class="toggle" id="toggle-detailPanel-$current.Step.Id" onclick="toggle('detailPanel-$current.Step.Id');" alt="Toggle Button" ></img>
    <span class="testKind#if($kind) testKind-$helper.RemoveChars($kind, " .")#end"></span>
#if (!$path)
    $helper.BreakWord($current.Step.Name)
#else
    <a class="crossref" href="gallio:navigateTo?path=$path#if($line>0)&amp;line=$line#if($column>0)&amp;column=$column#end#end">$helper.BreakWord($current.Step.Name)</a>
#end
    <table class="outcome-bar">
      <tr>
        <td>
          <div class="outcome-bar status-$current.Result.Outcome#if($current.Children.Count==0) condensed#end" title="$current.Result.Outcome" />
        </td>
      </tr>
    </table>
#if ($current.Children.Count > 0)
    <span class="outcome-icons">
      <img src="$resourceRoot/img/Passed.gif" alt="Passed"/>$statistics.PassedCount
      <img src="$resourceRoot/img/Failed.gif" alt="Failed"/>$statistics.FailedCount
      <img src="$resourceRoot/img/Ignored.gif" alt="Inconclusive or Skipped"/>$statistics.SkippedOrInconclusiveCount
    </span>
#end
  </span>
#*
	====================================================
	 DETAILS
	====================================================
*#
  <div id="detailPanel-$current.Step.Id" class="panel">
#if ($nestingLevel == 1)
    <table class="statistics-table">
      <tr class="alternate-row">
        <td class="statistics-label-cell">Results:</td>
        <td>$statistics.RunCount run, $statistics.FormatPassedCountWithCategories(), $statistics.FormatFailedCountWithCategories(), $statistics.FormatInconclusiveCountWithCategories(), $statistics.FormatSkippedCountWithCategories()</td>
      </tr>
      <tr>
        <td class="statistics-label-cell">Duration:</td>
        <td>$current.Result.Duration.TotalSeconds.ToString("0.00") s</td>
      </tr>
      <tr class="alternate-row">
        <td class="statistics-label-cell">Assertions:</td>
        <td>$current.Result.AssertCount</td>
      </tr>
    </table>
#else
Duration: $current.Result.Duration.TotalSeconds.ToString("0.00") s, Assertions: $current.Result.AssertCount.
#end
#*
	====================================================
	 METADATA
	====================================================
*#
#foreach ($entry in $helper.GetVisibleMetadataEntries($current))
      <li>$helper.BreakWord($entry)</li>
#beforeall
    <ul class="metadata">
#afterall
    </ul>
#end
    <div id="log-$current.Step.Id" class="log">
#*
	====================================================
	 TEST LOG
	====================================================
*#
#foreach ($stream in $current.TestLog.Streams)
      <div id="logStream logStream-$stream.Name">
        <span class="logStreamHeading">$stream.Name</span>
        <div class="logStreamBody">
        
        ## TODO
        
        </div>
      </div>
#end
    </div>
#*
	====================================================
	 CHILDREN
	====================================================
*#
#foreach ($run in $helper.GetVisibleChildren($current, $condensed))
#parse ("Gallio-Report.html+xhtml.detailed-item.vm")
#beforeall
    <ul class="testStepRunContainer">
#afterall
    </ul>
#nodata
#if ($run.Result.Outcome.Status == "Passed")
    <script type="text/javascript">toggle('detailPanel-$current.Step.Id');</script>
#end
#end
  </div>
</li>
#set ($nestingLevel = $nestingLevel - 1)
