<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="3.5">
  <Import Project="$(MetaBuildBinDir)\MetaBuild.Module.targets" />

  <PropertyGroup>
    <Coverage Condition="'$(Coverage)'==''">false</Coverage>

    <ShowReports Condition="'$(ShowReports)'==''">true</ShowReports>
    <ReportTypes Condition="'$(ReportTypes)'==''">Html-Condensed</ReportTypes>
    <IgnoreFailures Condition="'$(IgnoreFailures)'==''">false</IgnoreFailures>
    
    <HTMLHelpCompilerPath>$(ProgramFiles)\HTML Help Workshop\hhc.exe</HTMLHelpCompilerPath>
    <VSIPSDKHelpPath>$(Registry:HKEY_LOCAL_MACHINE\Software\Microsoft\VisualStudio\VSIP\9.0\@InstallDir)\HelpIntegrationWizard\MSHelp2</VSIPSDKHelpPath>
    <VSIPSDKHelpPath Condition="'$(VSIPSDKHelpPath)'==''">$(Registry:HKEY_LOCAL_MACHINE\Software\Microsoft\VisualStudio\VSIP\8.0\@InstallDir)\HelpIntegrationWizard\MSHelp2</VSIPSDKHelpPath>
    <SourceServerIndexerPath>$(ProgramFiles)\Debugging Tools for Windows\sdk\srcsrv\ssindex.cmd</SourceServerIndexerPath>
    <SourceServerIndexerPath Condition="! Exists('$(SourceServerIndexerPath)')">$(ProgramFiles)\Debugging Tools for Windows (x86)\srcsrv\ssindex.cmd</SourceServerIndexerPath>
    <NCoverInstallDir>$(Registry:HKEY_LOCAL_MACHINE\Software\Gnoso\NCover\@InstallDir)</NCoverInstallDir>

    <VersionSuffix></VersionSuffix>
    <VersionSuffix Condition="'$(Runtime)'=='Mono'">-Mono</VersionSuffix>
  </PropertyGroup>

  <!-- ROOT CONTENT -->

  <ItemGroup>
    <Module Include="*\*.module" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="Gallio License.txt" />
    <Content Include="ASL - Apache Software Foundation License.txt" />
    <Content Include="Credits.html" />
    
    <Extra Include="$(ToolsDir)\H2Reg\H2Reg.*" />

    <Feature Include="NO_ILMERGE" Condition="'$(NoILMerge)'=='true'" />
    <Feature Include="NO_NDOC" Condition="'$(NoNDoc)'=='true'" />
    <Feature Include="DOTNET40" Condition="'$(DotNet40)'=='true'" />
  </ItemGroup>

  <!-- CLEAN TARGETS -->

  <Target Name="BeforeClean"
          DependsOnTargets="CleanInstaller" />


  <!-- BUILD TARGETS -->

  <Target Name="AfterBuild"
          DependsOnTargets="" />


  <!-- IMAGE TARGETS -->

  <Target Name="AfterImage"
          DependsOnTargets="BuildXMLDocs;BuildSourceServerIndex" />


  <!-- TEST TARGETS -->

  <Target Name="AfterTest"
          DependsOnTargets="RunTestAssemblies;VerifyInstallation" />


  <!-- DIST TARGETS -->

  <Target Name="AfterDist"
          DependsOnTargets="BuildCHMDocs;BuildHxSDocs;BuildInstaller;BuildZip;BuildHTMLDocs" />


  <!-- SUPPORT CODE: API DOCS -->

  <PropertyGroup>
    <CopyrightText>Copyright 2005-2009 Gallio Project - http://www.gallio.org/</CopyrightText>
    <CopyrightHref>http://www.gallio.org/</CopyrightHref>

    <APIDocsDir>$(DistDir)\APIDocs\$(Version)</APIDocsDir>

    <NDocCommonOptions>@(DocumentedAssembly->'"%(FullPath)"', ' ')</NDocCommonOptions>

    <NDocXMLOptions>$(NDocCommonOptions) -documenter=Intellisense "-OutputDirectory=$(ImageDir)\bin" -UseAssemblyShadowCache=False</NDocXMLOptions>

    <NDocCHMOptions>$(NDocCommonOptions) -documenter=MSDN-CHM "-OutputDirectory=$(ImageDir)\docs" -HtmlHelpName=Gallio "-Title=Gallio API Documentation" -UseAssemblyShadowCache=False -AssemblyVersionInfo=AssemblyVersion "-CopyrightText=$(CopyrightText)" "-CopyrightHref=$(CopyrightHref)" -IncludeDefaultThreadSafety=False -CleanIntermediates=True</NDocCHMOptions>

    <NDocHxSOptions>$(NDocCommonOptions) -documenter=MSDN-Help2 "-OutputDirectory=$(ImageDir)\docs\vs" -GenerateCollectionFiles=True -PlugInNamespace=ms.vsipcc -AllLinksWithinVSHelpCollection=True -HtmlHelpName=Gallio "-Title=Gallio API Documentation" -UseAssemblyShadowCache=False -AssemblyVersionInfo=AssemblyVersion "-CopyrightText=$(CopyrightText)" "-CopyrightHref=$(CopyrightHref)" -IncludeDefaultThreadSafety=False -CleanIntermediates=True</NDocHxSOptions>
    
    <NDocHTMLOptions>$(NDocCommonOptions) -documenter=MSDN-Web "-OutputDirectory=$(APIDocsDir)\html" "-Title=Gallio API Documentation" -UseAssemblyShadowCache=False -AssemblyVersionInfo=AssemblyVersion "-CopyrightText=$(CopyrightText)" "-CopyrightHref=$(CopyrightHref)" -IncludeDefaultThreadSafety=False -CleanIntermediates=True</NDocHTMLOptions>
  </PropertyGroup>

  <!-- Produce clean Intellisense docs with "inheritdoc" accounted for. -->
  <Target Name="BuildXMLDocs"
          DependsOnTargets="BuildXMLDocs_NDoc;BuildXMLDocs_NoNDoc" />

  <Target Name="BuildXMLDocs_NDoc"
          Condition="'$(NoNDoc)'!='true'">
    <Message Text="Building XML Docs..."
             Importance="High" />

    <Exec Command="&quot;$(ToolsDir)\NDoc2\NDocConsole.exe&quot; $(NDocXMLOptions)" />
    <Delete Files="$(ImageDir)\bin\ndoc_qa.log;$(ImageDir)\bin\ndoc_build.log" />
  </Target>

  <Target Name="BuildXMLDocs_NoNDoc"
          Condition="'$(NoNDoc)'=='true'">
    <Copy SourceFiles="@(DocumentedAssembly->'%(RootDir)%(Directory)%(Filename).xml')"
          DestinationFolder="$(ImageDir)\bin" />
  </Target>

  <Target Name="BuildCHMDocs"
          Condition="'$(NoNDoc)'!='true'">
    <Message Text="Building CHM Docs..."
             Importance="High" />

    <Warning Text="Microsoft HTML Help Workshop must be installed so that Compiled HTML help (CHM) documentation can be generated.  Look in tools\Setup Files for the Microsoft HTML Help Workshop installer."
             Condition="! Exists('$(HTMLHelpCompilerPath)')" />

    <Exec Command="&quot;$(ToolsDir)\NDoc2\NDocConsole.exe&quot; $(NDocCHMOptions)"
          Condition="Exists('$(HTMLHelpCompilerPath)')" />
    <RemoveDir Directories="$(ImageDir)\docs\ndoc_msdn_temp" />
    
    <Copy SourceFiles="$(ImageDir)\docs\Gallio.chm"
          DestinationFolder="$(APIDocsDir)"
          Condition="Exists('$(HTMLHelpCompilerPath)')" />
  </Target>
  <ItemGroup Condition="'$(NoNDoc)'!='true' and Exists('$(HTMLHelpCompilerPath)')">
    <Feature Include="FEATURE_CHM_HELP" />
  </ItemGroup>

  <Target Name="BuildHTMLDocs"
          Condition="'$(NoNDoc)'!='true'">
    <Message Text="Building HTML Docs..."
             Importance="High" />

    <Exec Command="&quot;$(ToolsDir)\NDoc2\NDocConsole.exe&quot; $(NDocHTMLOptions)" />
    <RemoveDir Directories="$(ApiDocsDir)\html\ndoc_msdn_temp" />

    <!-- Replace the ndoc.js one with a new copy that contains a bugfix
         for FireFox. -->
    <Copy SourceFiles="$(ToolsDir)\NDoc2\ndoc.js"
          DestinationFolder="$(ApiDocsDir)\html"/>
  </Target>

  <Target Name="BuildHxSDocs"
          Condition="'$(NoNDoc)'!='true'">
    <Message Text="Building HxS Docs..."
             Importance="High" />

    <Message Text="$(VSIPSDKHelpPath)" Importance="High" />

    <Warning Text="Visual Studio 2005 or 2008 SDK must be installed so that HTML Help 2 (HxS) documentation can be generated for integration with the Visual Studio help system.  Check Microsoft's site for the Visual Studio SDK installer."
           Condition="! Exists('$(VSIPSDKHelpPath)')" />

    <Exec Command="&quot;$(ToolsDir)\NDoc2\NDocConsole.exe&quot; $(NDocHxSOptions)"
          Condition="Exists('$(VSIPSDKHelpPath)')" />
    <RemoveDir Directories="$(ImageDir)\docs\vs\ndoc_htmlhelp2_temp" />
  </Target>
  <ItemGroup Condition="'$(NoNDoc)'!='true' and Exists('$(VSIPSDKHelpPath)')">
    <Feature Include="FEATURE_VS_HELP" />
  </ItemGroup>

  <!-- SUPPORT CODE: INSTALLERS -->

  <PropertyGroup>
    <InstallerWixProperties>
      Configuration=Release;
      Version=$(Version);
      TargetDir=$(ImageDir);
      WixTargetsPath=$(ToolsDir)\Wix\Microsoft\WiX\v3.0\Wix.targets;
      WixTasksPath=$(ToolsDir)\Wix\Microsoft\WiX\v3.0\WixTasks.dll;
      WixToolPath=$(ToolsDir)\Wix\bin;
      WixExtDir=$(ToolsDir)\Wix\bin;
      DefineSolutionProperties=false;
    </InstallerWixProperties>
    <InstallerFeatureFile>$(SourceDir)\Installer.Wix\Features.wxi</InstallerFeatureFile>
  </PropertyGroup>

  <Target Name="BuildInstaller"
          Condition="'$(Runtime)'!='Mono'"
          DependsOnTargets="BuildInstaller-x86;BuildInstaller-x64" />

  <Target Name="PrepareToBuildInstaller">
    <WriteLinesToFile File="$(InstallerFeatureFile)"
                      Lines="&lt;Include&gt;"
                      Overwrite="true" />
    <WriteLinesToFile File="$(InstallerFeatureFile)"
                      Lines="@(Feature -> '&lt;?define %(Identity)=&quot;true&quot; ?&gt;')"
                      Overwrite="false" />
    <WriteLinesToFile File="$(InstallerFeatureFile)"
                      Lines="&lt;/Include&gt;"
                      Overwrite="false" />
  </Target>

  <Target Name="BuildInstaller-x86" DependsOnTargets="PrepareToBuildInstaller">
    <Message Text="Building WiX Installer for x86..."
             Importance="High" />

    <MSBuild Projects="$(SourceDir)\Installer.Wix\GallioBundle.wixproj"
             Targets="Build"
             Properties="$(InstallerWixProperties);Platform=x86" />

    <Copy SourceFiles="$(SourceDir)\Installer.Wix\bin\x86\Release\GallioBundle-$(Version)$(VersionSuffix)-Setup-x86.msi"
          DestinationFolder="$(DistDir)" />
  </Target>

  <Target Name="BuildInstaller-x64" DependsOnTargets="PrepareToBuildInstaller">
    <Message Text="Building WiX Installer for x64..."
             Importance="High" />

    <MSBuild Projects="$(SourceDir)\Installer.Wix\GallioBundle.wixproj"
             Targets="Build"
             Properties="$(InstallerWixProperties);Platform=x64" />
	     
    <Copy SourceFiles="$(SourceDir)\Installer.Wix\bin\x64\Release\GallioBundle-$(Version)$(VersionSuffix)-Setup-x64.msi"
          DestinationFolder="$(DistDir)" />
  </Target>

  <Target Name="CleanInstaller"
          Condition="'$(Runtime)'!='Mono'"
          DependsOnTargets="CleanInstaller-x86;CleanInstaller-x64">
    <Delete Files="$(InstallerFeatureFile)" />
  </Target>

  <Target Name="CleanInstaller-x86">
    <MSBuild Projects="$(SourceDir)\Installer.Wix\GallioBundle.wixproj"
             Targets="Clean"
             Properties="$(InstallerWixProperties);Platform=x86" />
  </Target>

  <Target Name="CleanInstaller-x64">
    <MSBuild Projects="$(SourceDir)\Installer.Wix\GallioBundle.wixproj"
             Targets="Clean"
             Properties="$(InstallerWixProperties);Platform=x64" />
  </Target>

  <Target Name="BuildZip">
    <Message Text="Build redistributable Zip archive..."
             Importance="High" />

    <CreateItem Include="$(ImageDir)\**\*.*">
      <Output TaskParameter="Include" ItemName="ZipFiles" />
    </CreateItem>

    <Zip Files="@(ZipFiles)"
         WorkingDirectory="$(ImageDir)"
         ZipFileName="$(DistDir)\GallioBundle-$(Version)$(VersionSuffix).zip"
         ZipLevel="9" />
  </Target>


  <!-- SUPPORT CODE: SOURCE SERVER INDEXING -->

  <Target Name="BuildSourceServerIndex">
    <Message Text="Generating source server index..."
             Importance="High" />

    <Warning Text="The Debugging Tools for Windows must be installed along with the Source Source SDK in order to embed Source Server indexing information in the PDBs."
             Condition="! Exists('$(SourceServerIndexerPath)')" />

    <Exec Command="&quot;$(SourceServerIndexerPath)&quot; -System=svn -Ini=&quot;$(SourceDir)\srcsrv.ini&quot; -Source=&quot;$(SourceDir)&quot; -Symbols=&quot;$(ImageDir)\bin&quot;"
          Condition="Exists('$(SourceServerIndexerPath)')" />
  </Target>


  <!-- SUPPORT CODE: TESTS -->

  <UsingTask TaskName="NCover.MSBuildTasks.NCoverReporting"
             AssemblyFile="$(NCoverInstallDir)\Build Task Plugins\NCover.MSBuildTasks.dll"/>

  <!-- Note: The Gallio MSBuildTasks assembly gets loaded lazily so it's ok
       to reference it even when it has yet to be built. -->
  <UsingTask AssemblyFile="$(ImageDir)\bin\Gallio.MSBuildTasks.dll" TaskName="Gallio.MSBuildTasks.Gallio" />

  <PropertyGroup>
    <TestRunnerType Condition="$(Coverage)">NCover3</TestRunnerType>
    <TestRunnerType Condition="! $(Coverage)">IsolatedProcess</TestRunnerType>
    <TestRunnerType Condition="'$(Runtime)'=='Mono'">IsolatedAppDomain</TestRunnerType>

    <CoverageFilters>
    <!-- Should no longer be needed since we are telling NCover to filter upfront.
      <Filter>
        <Pattern>*.Tests</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>*.TestResources</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>JetBrains.*</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>Aga.Controls</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>Configuration</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>DevExpress.*</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>EnvDTE*</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>NAnt.*</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>csUnit*</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>nunit.*</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>xunit*</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
	<Pattern>QuickGraph*</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
	<Pattern>MbUnit.Framework</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
	<Pattern>Rhino.Mocks</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
	<Pattern>TestDriven.Framework</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
	<Pattern>WeifenLuo.*</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
	<Pattern>log4net</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
	<Pattern>ISymWrapper</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
	<Pattern>ICSharpCode.TextEditor</Pattern>
	<Type>Assembly</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>Castle.*</Pattern>
	<Type>Namespace</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>Mono.*</Pattern>
	<Type>Namespace</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>Cecil.*</Pattern>
	<Type>Namespace</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>Sharpen.*</Pattern>
	<Type>Namespace</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      <Filter>
        <Pattern>Db4objects.*</Pattern>
	<Type>Namespace</Type>
        <IsInclude>false</IsInclude>
      </Filter>
      -->
    </CoverageFilters>
    <SatisfactoryCoverage>
        <Threshold>
            <CoverageMetric>SymbolCoverage</CoverageMetric>
            <Value>95.0</Value>
        </Threshold>
        <Threshold>
            <CoverageMetric>MethodCoverage</CoverageMetric>
            <Type>Document</Type>
            <Value>70</Value>
        </Threshold>
        <Threshold>
            <CoverageMetric>BranchCoverage</CoverageMetric>
            <Type>Method</Type>
            <Value>75</Value>
        </Threshold>
    </SatisfactoryCoverage>
  </PropertyGroup>
  <Target Name="RunTestAssemblies">
    <Message Text="Running unit tests..."
             Importance="High" />

    <Delete Files="Coverage.xml"
            Condition="Exists('Coverage.xml')" />   

    <Gallio Condition="'$(Runtime)'=='CLR'"
            Assemblies="@(TestAssembly)"
            ReportDirectory="$(ReportDir)"
            ReportTypes="$(ReportTypes)"
            RunnerType="$(TestRunnerType)"
	    RunnerProperties="NCoverArguments='//eas .*.Tests%3B.*.TestResources%3BJetBrains.*%3BAga.Controls%3BConfiguration%3BDevExpress.*%3BEnvDTE.*%3BNAnt.*%3BcsUnit.*%3Bnunit.*%3Bxunit.*%3BQuickGraph.*%3BMbUnit.Framework%3BRhino.Mocks%3BTestDriven.Framework%3BWeifenLuo.*%3Blog4net%3BISymWrapper%3BICSharpCode.TextEditor //et Castle.*%3BMono.*%3BCecil.*%3BSharpen.*%3BDb4objects.*'"
            ShowReports="$(ShowReports)"
	    IgnoreFailures="true"
	    RunTimeLimit="2700">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
    </Gallio>

    <Exec Condition="'$(Runtime)'=='Mono'"
          Command="&quot;$(MonoExe)&quot; &quot;$(ImageDir)\bin\Gallio.Echo.exe&quot; @(TestAssembly->'&quot;%(FullPath)&quot;', ' ') /rd:&quot;$(ReportDir)&quot; /rt:&quot;$(ReportTypes)&quot; /r:&quot;$(TestRunnerType)&quot;"
          IgnoreExitCode="true"
	  WorkingDirectory="$(TempDir)">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
    </Exec>

    <NCoverReporting Condition="$(Coverage) and Exists('Coverage.xml')"
                    CoverageDataPaths="Coverage.xml"
                    OutputPath="$(ReportDir)\CoverageReport.xml"
		    ProjectName="Gallio"
		    ReportDataFilter="Assembly, Namespace"
		    ReportFormat="Xml"
		    ReportType="SymbolModuleNamespaceClassMethod"
		    SortBy="ClassLine"
		    MaxTopUncoveredToReport="20"
		    CoverageFilters="$(CoverageFilters)"
                    SatisfactoryCoverage="$(SatisfactoryCoverage)" />

    <Exec Command="cscript //nologo &quot;$(BinDir)\Run.vbs&quot; &quot;'$(NCoverInstallDir)\NCover.Explorer.exe' Coverage.xml&quot;"
          Condition="$(ShowReports) and $(Coverage) and Exists('Coverage.xml')" />

    <Error Text="Some tests failed!"
             Condition="'$(ExitCode)'!='0' and ! $(IgnoreFailures)" />
    <Warning Text="Some tests failed!"
             Condition="'$(ExitCode)'!='0' and $(IgnoreFailures)" />
  </Target>  

  <Target Name="VerifyInstallation">
    <Message Text="Verifying installation of all plugins..."
             Importance="High" />

    <Exec Command="&quot;$(ImageDir)\bin\Gallio.Utility.exe&quot; /command:VerifyInstallation /v:Verbose"
          IgnoreExitCode="true"
	  WorkingDirectory="$(TempDir)">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
    </Exec>
    
    <Error Text="Verification of plugin installation failed!"
             Condition="'$(ExitCode)'!='0' and ! $(IgnoreFailures)" />
  </Target>
</Project>
